
加速爬蟲 => concurrent.futures --- 啟動平行任務
Reference: https://docs.python.org/zh-tw/3/library/concurrent.futures.html
- ThreadPoolExecutor =>


from concurrent.futures import ThreadPoolExecutor, as_completed

with ThreadPoolExecutor(max_workers=5) as executor:
    futures = [executor.submit(self.parse_article, a) for a in a_tags]
    for future in as_completed(futures):
        try:
            post = future.result()
            if post:
                all_posts.append(post)
        except Exception as e:
            logger.error(f"Thread parse error: {e}")


資料庫因非同步執行而被同時操作，造成Deadlock => retries 機制
def safe_commit(session: Session, retries: int = 3, delay: float = 0.5):
    for attempt in range(retries):
        try:
            session.commit()
            return
        except OperationalError as e:
            if "Deadlock found" in str(e):
                session.rollback()
                time.sleep(delay)
                continue
            raise
        except Exception:
            session.rollback()
            raise
    raise Exception("Deadlock could not be resolved after retries.")

讓資料庫支援中文
ALTER DATABASE ptt_db CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;
ALTER TABLE posts CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

測試POST
curl -X POST http://localhost:8000/api/posts ^
-H "Content-Type: application/json" ^
-d "{\"title\": \"這是一篇測試文章\", \"content\": \"這是文章內容\", \"author\": {\"name\": \"test_author\"}, \"board\": {\"name\": \"NBA\"}}"


curl -X POST http://localhost:8000/api/posts/form ^
-H "Content-Type: application/x-www-form-urlencoded" ^
-d "title=test_title&author_name=test_author&content=test。&board_name=NBA"
